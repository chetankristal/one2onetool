properties([
    parameters([
        choice(
            choices: ['Questions.json', 'Questions-test.json'], // Define your choices here
            description: 'the default value is Questions.json, check the dropdown if you want to select something else:',
            name: 'data_file', // Replace with your parameter name
            defaultValue: 'Questions.json' // Set the default value here
        )
    ])
])



pipeline {
    agent any
    
    stages {
        stage('Git Checkout') {
            steps {
                script {
                    git branch: 'release',
                        credentialsId: 'github-credential',
                        url: 'https://github.com/chetankristal/one2onetool.git'

                    def selectedOption = params.data_file
                    echo "Selected option: ${selectedOption}"

                    // Use a shell script to conditionally check the selected option
                    if (selectedOption == 'Questions.json') {
                        sh "echo 'default json file is selected'"
                    } else if (selectedOption == 'Questions-test.json') {
                        sh "echo 'Questions-test.json selected'"
                        // Add your Option2 specific commands here
                        sh "mv data/Questions.json data/backup-Questions.json"
                        sh "mv data/Questions-test.json data/Questions.json"
                    }  
                }
            }
        }
        
        stage('Install Dependencies') {
            steps {
                // Install Node.js dependencies
                sh 'npm install'
            }
        }

        stage('Create Docker Images') {
            steps {
                // Run tests (adjust the test command as needed)
                sh '''
                cp -rf /var/lib/jenkins/project1/scripts/ansible_playbooks/files/prod/Dockerfile .
                docker image build -f Dockerfile -t chetan11may/node-app:prod .
                docker push chetan11may/node-app:prod
                '''
            }
        }
        
        stage('Deploy to Production') {
            steps {
                // Add deployment steps for staging branch
                echo "for staging"
                sh 'ansible-playbook -i  /var/lib/jenkins/project1/scripts/ansible_playbooks/ansible_hosts  /var/lib/jenkins/project1/scripts/ansible_playbooks/deploy-prod.yaml'

            }
        }
    }
    post {
        always {
            script {
                // Determine the build result
                def buildStatus = currentBuild.result ?: 'SUCCESS'

                // Define the subject of the email
                def subject = "Jenkins Job: ${env.JOB_NAME} - ${buildStatus}"

                // Send the email
                emailext(
                    subject: subject,
                    body: "Build ${buildStatus}: ${env.BUILD_URL}",
                    to: 'chetan.anandlove@gmail.com',
                    attachLog: true, // Attach the build log
                )
            }
        }
    }

}
